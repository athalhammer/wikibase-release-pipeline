on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - run: ./nx lint

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        component:
          - wikibase
          - elasticsearch
          - wdqs
          - wdqs-frontend
          - wdqs-proxy
          - quickstatements

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Current issue is generating an appropriate dev tag for the image
      # I would like to have nx manage this through pre-release numbers,
      # but may need to do something less complicated first to figure-out
      # the target workflow.
      #
      # Multi platform builds are REALLY slow on Github Actions currently.
      # We may need to use https://github.com/baschny/append-buildx-action
      # and an external runner for the ARM64 builds, running either off of
      # a local ARM machine on the team or a ARM-based VPS to get off qemu.
      # To enable multi-platform builds add this to the buildx bake params:
      #
      # --set default.platform=linux/amd64,linux/arm64
      #
      # However, multi-platform builds cannot be loaded but only directly
      # pushed to a repository, so we need to ammend what is here to make
      # the push work from the build (so not all the tags).
      - run: |
          export $(grep -v '^#' build.env | xargs)
          # export IMAGE_REGISTRY=ghcr.io
          # export IMAGE_NAMESPACE=${{ github.repository_owner }}
          docker buildx bake
        working-directory: ./build/${{ matrix.component }}
  
      - uses: ./.github/actions/push-ghcr
        with:
          docker_image: wikibase/${{ matrix.component }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        suite:
          - repo
          - fedprops
          - repo_client
          - quickstatements
          - pingback
          - confirm_edit
          - elasticsearch
          - deploy

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/pull-ghcr
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - run: ./nx test -- ${{ matrix.suite }}

      - name: Reporter
        run: |
          cd .github/reporter
          npm install
          node report.js ${{ matrix.suite }}

      - name: Show logs
        run: |
          ls -lahr test/suites/${{ matrix.suite }}/results test/suites/${{ matrix.suite }}/results/*
          tail -n +1 test/suites/${{ matrix.suite }}/results/*.log
        continue-on-error: true

      - uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: test/suites/**/results

  test-success:
    # Post-test CI step - to check all tests succeeded
    # Github Branch Protection rules require this to pass to allow merging
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - run: true
